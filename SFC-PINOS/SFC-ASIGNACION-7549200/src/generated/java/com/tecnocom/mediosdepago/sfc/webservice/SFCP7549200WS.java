package com.tecnocom.mediosdepago.sfc.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2023-07-16T14:51:17.565-05:00
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "SFC_P7549200WS",
                  wsdlLocation = "file:/C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-ASIGNACION-7549200/src/main/resources/wsdl/SFC_P7549200WS.wsdl",
                  targetNamespace = "http://webservice.sfc.mediosdepago.tecnocom.com")
public class SFCP7549200WS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WS");
    public final static QName SFCP7549200WSHttpsEndpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpsEndpoint");
    public final static QName SFCP7549200WSHttpsSoap11Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpsSoap11Endpoint");
    public final static QName SFCP7549200WSHttpsSoap12Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpsSoap12Endpoint");
    public final static QName SFCP7549200WSHttpEndpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpEndpoint");
    public final static QName SFCP7549200WSHttpSoap11Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpSoap11Endpoint");
    public final static QName SFCP7549200WSHttpSoap12Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7549200WSHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-ASIGNACION-7549200/src/main/resources/wsdl/SFC_P7549200WS.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SFCP7549200WS.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-ASIGNACION-7549200/src/main/resources/wsdl/SFC_P7549200WS.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SFCP7549200WS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SFCP7549200WS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SFCP7549200WS() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SFCP7549200WS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SFCP7549200WS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SFCP7549200WS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsEndpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsEndpoint() {
        return super.getPort(SFCP7549200WSHttpsEndpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsEndpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpsEndpoint, SFCP7549200WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsSoap11Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsSoap11Endpoint() {
        return super.getPort(SFCP7549200WSHttpsSoap11Endpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsSoap11Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpsSoap11Endpoint, SFCP7549200WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsSoap12Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsSoap12Endpoint() {
        return super.getPort(SFCP7549200WSHttpsSoap12Endpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpsSoap12Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpsSoap12Endpoint, SFCP7549200WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpEndpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpEndpoint() {
        return super.getPort(SFCP7549200WSHttpEndpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpEndpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpEndpoint, SFCP7549200WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpSoap11Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpSoap11Endpoint() {
        return super.getPort(SFCP7549200WSHttpSoap11Endpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpSoap11Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpSoap11Endpoint, SFCP7549200WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpSoap12Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpSoap12Endpoint() {
        return super.getPort(SFCP7549200WSHttpSoap12Endpoint, SFCP7549200WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7549200WSPortType
     */
    @WebEndpoint(name = "SFC_P7549200WSHttpSoap12Endpoint")
    public SFCP7549200WSPortType getSFCP7549200WSHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7549200WSHttpSoap12Endpoint, SFCP7549200WSPortType.class, features);
    }

}
