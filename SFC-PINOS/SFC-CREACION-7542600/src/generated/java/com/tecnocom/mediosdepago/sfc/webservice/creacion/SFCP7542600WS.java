package com.tecnocom.mediosdepago.sfc.webservice.creacion;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2023-07-26T12:20:56.809-05:00
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "SFC_P7542600WS",
                  wsdlLocation = "file:/C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-CREACION-7542600/src/main/resources/wsdl/SFC_P7542600WS.wsdl",
                  targetNamespace = "http://webservice.sfc.mediosdepago.tecnocom.com")
public class SFCP7542600WS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WS");
    public final static QName SFCP7542600WSHttpsSoap11Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpsSoap11Endpoint");
    public final static QName SFCP7542600WSHttpSoap12Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpSoap12Endpoint");
    public final static QName SFCP7542600WSHttpEndpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpEndpoint");
    public final static QName SFCP7542600WSHttpSoap11Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpSoap11Endpoint");
    public final static QName SFCP7542600WSHttpsSoap12Endpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpsSoap12Endpoint");
    public final static QName SFCP7542600WSHttpsEndpoint = new QName("http://webservice.sfc.mediosdepago.tecnocom.com", "SFC_P7542600WSHttpsEndpoint");
    static {
    	URL url = null;
        try {
            url = new URL("C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-CREACION-7542600/src/main/resources/wsdl/SFC_P7542600WS.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SFCP7542600WS.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/rarl5550/Documents/PINOS-ONLINEE/SFC-PINOS/SFC-ASIGNACION-7549200/src/main/resources/wsdl/SFC_P7549200WS.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SFCP7542600WS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SFCP7542600WS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SFCP7542600WS() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SFCP7542600WS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SFCP7542600WS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SFCP7542600WS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsSoap11Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsSoap11Endpoint() {
        return super.getPort(SFCP7542600WSHttpsSoap11Endpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsSoap11Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpsSoap11Endpoint, SFCP7542600WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpSoap12Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpSoap12Endpoint() {
        return super.getPort(SFCP7542600WSHttpSoap12Endpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpSoap12Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpSoap12Endpoint, SFCP7542600WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpEndpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpEndpoint() {
        return super.getPort(SFCP7542600WSHttpEndpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpEndpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpEndpoint, SFCP7542600WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpSoap11Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpSoap11Endpoint() {
        return super.getPort(SFCP7542600WSHttpSoap11Endpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpSoap11Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpSoap11Endpoint, SFCP7542600WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsSoap12Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsSoap12Endpoint() {
        return super.getPort(SFCP7542600WSHttpsSoap12Endpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsSoap12Endpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpsSoap12Endpoint, SFCP7542600WSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsEndpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsEndpoint() {
        return super.getPort(SFCP7542600WSHttpsEndpoint, SFCP7542600WSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SFCP7542600WSPortType
     */
    @WebEndpoint(name = "SFC_P7542600WSHttpsEndpoint")
    public SFCP7542600WSPortType getSFCP7542600WSHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(SFCP7542600WSHttpsEndpoint, SFCP7542600WSPortType.class, features);
    }

}
